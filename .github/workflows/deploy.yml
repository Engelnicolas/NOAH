name: ðŸš€ NOAH Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      regenerate_password:
        description: 'Regenerate passwords'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.12'

jobs:
  validate:
    name: âœ… Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          pip install -r Scripts/requirements.txt
          pip install ansible
      
      - name: Validate Python syntax
        run: |
          python -m py_compile noah.py
          python -m py_compile Scripts/*.py
      
      - name: Validate Ansible
        run: |
          for playbook in Ansible/*.yml; do
            ansible-playbook --syntax-check "$playbook"
          done
      
      - name: Test NOAH CLI
        run: python noah.py --help

  deploy:
    name: ðŸš€ Deploy
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: pip install -r Scripts/requirements.txt
      
      - name: Setup SOPS/Age
        env:
          AGE_SECRET_KEY: ${{ secrets.AGE_SECRET_KEY }}
        run: |
          # Install SOPS
          curl -LO https://github.com/mozilla/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64
          sudo mv sops-v3.8.1.linux.amd64 /usr/local/bin/sops
          sudo chmod +x /usr/local/bin/sops
          
          # Install Age
          curl -LO https://github.com/FiloSottile/age/releases/download/v1.1.1/age-v1.1.1-linux-amd64.tar.gz
          tar -xzf age-v1.1.1-linux-amd64.tar.gz
          sudo mv age/age* /usr/local/bin/
          
          # Setup keys
          mkdir -p Age
          echo "$AGE_SECRET_KEY" > Age/keys.txt
          chmod 600 Age/keys.txt
      
      - name: Configure Kubernetes
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
      
      - name: Regenerate passwords
        if: github.event.inputs.regenerate_password == 'true'
        run: python noah.py password new
      
      - name: Deploy NOAH
        run: |
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            python noah.py deploy all --domain noah-infra.com
          else
            python noah.py deploy all --domain staging.noah-infra.com
          fi
      
      - name: Test deployment
        run: |
          python noah.py status
          python noah.py test sso || echo "SSO test warnings"
