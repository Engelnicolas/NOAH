---
- name: Deploy Authentik SSO (Standalone)
  hosts: localhost
  gather_facts: no
  vars:
    authentik_namespace: "identity"
    verbose_mode: true  # Enable verbose output by default
    ansible_python_interpreter: "../.venv/bin/python"
    
  environment:
    PYTHONPATH: "../.venv/lib/python3.12/site-packages:{{ ansible_env.PYTHONPATH | default('') }}"
    
  tasks:
    - name: Create namespace
      kubernetes.core.k8s:
        name: "{{ authentik_namespace }}"
        api_version: v1
        kind: Namespace
        state: present

    - name: Create Authentik secrets for standalone OIDC deployment
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: authentik-secrets
            namespace: "{{ authentik_namespace }}"
            labels:
              app.kubernetes.io/managed-by: Helm
            annotations:
              meta.helm.sh/release-name: authentik
              meta.helm.sh/release-namespace: "{{ authentik_namespace }}"
          type: Opaque
          stringData:
            AUTHENTIK_SECRET_KEY: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=50') }}"
            AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            AUTHENTIK_BOOTSTRAP_TOKEN: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=50') }}"
            AUTHENTIK_POSTGRESQL__PASSWORD: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            AUTHENTIK_REDIS__PASSWORD: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            # OIDC-specific secrets
            oidc-client-secret: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
            jwt-signing-key: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=64') }}"
            session-secret: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
            email-password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            # Additional keys for PostgreSQL and Redis Helm charts
            postgresql-password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            redis-password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            secret-key: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=50') }}"
            bootstrap-password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=24') }}"
            bootstrap-token: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=50') }}"

    - name: Create Authentik values file for Helm deployment
      copy:
        content: |
          # Authentik standalone IAM configuration
          authentik:
            secret_key: ""  # Will be set from secrets
            bootstrap:
              password: ""  # Will be set from secrets
              token: ""     # Will be set from secrets
            postgresql:
              enabled: false  # Use external PostgreSQL
              host: "postgresql.{{ authentik_namespace }}.svc.cluster.local"
              port: 5432
              name: "authentik"
              user: "authentik"
              password: ""  # Will be set from secrets
            redis:
              enabled: false  # Use external Redis
              host: "redis.{{ authentik_namespace }}.svc.cluster.local"
              port: 6379
              password: ""  # Will be set from secrets
          
          # External PostgreSQL configuration
          postgresql:
            enabled: true
            auth:
              postgresPassword: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
              username: "authentik"
              password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
              database: "authentik"
            primary:
              persistence:
                enabled: false  # Use emptyDir for testing
                storageClass: ""
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "250m"
                limits:
                  memory: "512Mi"
                  cpu: "500m"
          
          # External Redis configuration
          redis:
            enabled: true
            auth:
              enabled: false  # Disable auth for testing simplicity
              password: ""
            master:
              persistence:
                enabled: false  # Use emptyDir for testing
                storageClass: ""
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "256Mi"
                  cpu: "200m"
            replica:
              persistence:
                enabled: false  # Use emptyDir for testing
                storageClass: ""
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "256Mi"
                  cpu: "200m"
          
          # Server configuration
          server:
            ingress:
              enabled: false  # Disable for internal testing
            service:
              type: ClusterIP
            replicas: 1
          
          # Worker configuration  
          worker:
            replicas: 1
        dest: /tmp/authentik-values.yaml

    - name: Deploy Authentik using Helm
      shell: |
        helm upgrade --install authentik ../Helm/authentik \
          --namespace {{ authentik_namespace }} \
          --values /tmp/authentik-values.yaml \
          --timeout 600s \
          {% if dry_run | default(false) %}--dry-run{% endif %}
      register: authentik_helm_result

    - name: Set deployment status based on validation
      set_fact:
        authentik_deployment_status: "{{ 'VALIDATED' if authentik_helm_result.rc == 0 else 'FAILED' }}"
        authentik_validation_status: "{{ 'SUCCESS - Standalone IAM configured' if authentik_helm_result.rc == 0 else 'FAILED' }}"

    - name: Display Authentik deployment status
      debug:
        msg:
          - "Authentik deployment validated for namespace: {{ authentik_namespace }}"
          - "Access URL: http://authentik.{{ authentik_namespace }}.svc.cluster.local"
          - "Bootstrap user: akadmin"
          - "Deployment status: {{ authentik_deployment_status }}"
          - "Validation status: {{ authentik_validation_status }}"
          - "Helm dry-run: {{ 'SUCCESS' if authentik_helm_result.rc == 0 else 'FAILED' }}"

    - name: Validate Authentik standalone IAM deployment summary
      debug:
        msg:
          - "=== AUTHENTIK STANDALONE IAM DEPLOYMENT SUMMARY ==="
          - "✓ Namespace: {{ authentik_namespace }}"
          - "✓ Secrets: authentik-secrets (Helm-managed)"
          - "✓ Helm Chart: ../Helm/authentik"
          - "✓ PostgreSQL: External dependency configured"
          - "✓ Redis: External dependency configured"
          - "✓ IAM Mode: Standalone (No external LDAP)"
          - "✓ Authentication: Internal user database"
          - "✓ Validation: {{ authentik_validation_status }}"
          - "✅ Ready for standalone IAM operations"
