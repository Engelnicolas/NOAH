---
- name: Deploy Cilium CNI with SSO Network Preparation
  hosts: local
  gather_facts: no
  vars:
    namespace: "{{ namespace | default('kube-system') }}"
    deployment_phase: "{{ deployment_phase | default('full') }}"  # 'preparation', 'sso-integration', or 'full'
    
  tasks:
    - name: Display deployment phase
      debug:
        msg: "Deploying Cilium in {{ deployment_phase }} mode"

    # PHASE 1: Network Preparation (run BEFORE Samba4/Authentik)
    - name: "NETWORK PREPARATION: Deploy basic Cilium CNI"
      block:
        - name: Add Cilium Helm repository
          kubernetes.core.helm_repository:
            name: cilium
            repo_url: https://helm.cilium.io/

        - name: Create identity namespace with proper labels
          kubernetes.core.k8s:
            definition:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: identity
                labels:
                  name: identity
                  purpose: sso-services
                  network-policy: enabled

        - name: Generate basic Cilium secrets with SOPS
          shell: |
            cat > /tmp/cilium-secrets.yaml << EOF
            apiVersion: v1
            kind: Secret
            metadata:
              name: cilium-secrets
              namespace: {{ namespace }}
            type: Opaque
            stringData:
              identity-allocation-psk: "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"
              hubble-relay-client-cert: "placeholder-cert"
              hubble-relay-client-key: "placeholder-key"
            EOF
            
            sops --encrypt --age $(grep "public key:" ./Age/keys.txt | cut -d' ' -f4) \
              /tmp/cilium-secrets.yaml > ./Helm/cilium/secrets/cilium-secrets.enc.yaml
            
            rm /tmp/cilium-secrets.yaml
          args:
            creates: ./Helm/cilium/secrets/cilium-secrets.enc.yaml

        - name: Apply encrypted Cilium secrets
          shell: |
            export SOPS_AGE_KEY_FILE=./Age/keys.txt
            sops --decrypt ./Helm/cilium/secrets/cilium-secrets.enc.yaml | \
            kubectl apply -f - -n {{ namespace }}
          environment:
            SOPS_AGE_KEY_FILE: ./Age/keys.txt

        - name: Deploy basic Cilium CNI (network preparation phase)
          kubernetes.core.helm:
            name: cilium
            chart_ref: cilium/cilium
            release_namespace: "{{ namespace }}"
            create_namespace: true
            values:
              # Basic CNI configuration for network preparation
              operator:
                replicas: 1
              ipam:
                mode: kubernetes
              kubeProxyReplacement: strict
              k8sServiceHost: kubernetes.default.svc.cluster.local
              k8sServicePort: 443
              
              # Enable service mesh features for SSO preparation
              serviceMesh:
                enabled: true
              l7Proxy: true
              
              # Basic DNS configuration
              dnsPolicy:
                enabled: true
                
              # Enable network policy support
              policyEnforcement: default
              
              # Basic Hubble configuration (will be enhanced later)
              hubble:
                enabled: true
                relay:
                  enabled: true
                  resources:
                    requests:
                      cpu: 50m
                      memory: 32Mi
                    limits:
                      cpu: 200m
                      memory: 128Mi
                ui:
                  enabled: false  # Will be enabled in SSO integration phase
                  
              # Resource configuration for preparation phase
              resources:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

        - name: Wait for Cilium basic deployment
          kubernetes.core.k8s_info:
            api_version: apps/v1
            kind: DaemonSet
            name: cilium
            namespace: "{{ namespace }}"
            wait: true
            wait_condition:
              type: Progressing
              status: "True"
            wait_timeout: 300
          register: cilium_basic_deployment

        - name: Verify basic Cilium network functionality
          shell: |
            echo "=== VERIFYING BASIC CILIUM NETWORK ==="
            
            # Wait for Cilium to be ready
            timeout 120 sh -c 'until kubectl -n {{ namespace }} exec ds/cilium -- cilium status --brief 2>/dev/null | grep -q "OK"; do sleep 5; done'
            
            # Check connectivity
            kubectl -n {{ namespace }} exec ds/cilium -- cilium connectivity test --single-node --test basic-connectivity || true
            
            echo "âœ“ Basic Cilium network is operational"
          register: basic_network_status
          retries: 3
          delay: 10
          until: basic_network_status.rc == 0

      when: deployment_phase in ['preparation', 'full']
      tags: [preparation, network]

    # PHASE 2: SSO Integration (run AFTER Samba4/Authentik are deployed)
    - name: "SSO INTEGRATION: Enhanced Cilium with SSO features"
      block:
        - name: Create SSO configuration for Cilium
          kubernetes.core.k8s:
            definition:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: cilium-sso-config
                namespace: "{{ namespace }}"
              data:
                oidc-config.yaml: |
                  issuer: https://auth.{{ domain | default('noah-infra.com') }}/application/o/cilium/
                  client_id: cilium
                  usernameClaim: preferred_username
                  groupsClaim: groups
                  requiredClaims:
                    - name: groups
                      value: cilium-admins

        - name: Apply network policies for SSO services
          kubernetes.core.k8s:
            state: present
            definition: "{{ item }}"
            wait: true
            wait_timeout: 60
          with_file:
            - "./Helm/cilium/templates/network-policies.yaml"
          register: network_policies_result

        - name: Upgrade Cilium with full SSO integration
          kubernetes.core.helm:
            name: cilium
            chart_ref: cilium/cilium
            release_namespace: "{{ namespace }}"
            values:
              # Full CNI configuration with SSO integration
              operator:
                replicas: 1
              ipam:
                mode: kubernetes
              kubeProxyReplacement: strict
              k8sServiceHost: kubernetes.default.svc.cluster.local
              k8sServicePort: 443
              
              # Full service mesh features
              serviceMesh:
                enabled: true
              l7Proxy: true
              
              # Enhanced DNS configuration
              dnsPolicy:
                enabled: true
                
              # Network policy enforcement
              policyEnforcement: default
              
              # Full Hubble configuration with SSO
              hubble:
                enabled: true
                relay:
                  enabled: true
                  resources:
                    requests:
                      cpu: 100m
                      memory: 64Mi
                    limits:
                      cpu: 500m
                      memory: 512Mi
                ui:
                  enabled: true
                  backend:
                    resources:
                      requests:
                        cpu: 100m
                        memory: 64Mi
                      limits:
                        cpu: 500m
                        memory: 512Mi
                  frontend:
                    resources:
                      requests:
                        cpu: 100m
                        memory: 64Mi
                      limits:
                        cpu: 500m
                        memory: 512Mi
                  ingress:
                    enabled: true
                    className: nginx
                    annotations:
                      # NOAH SSO Integration
                      nginx.ingress.kubernetes.io/auth-url: "https://auth.{{ domain | default('noah-infra.com') }}/outpost.goauthentik.io/auth/nginx"
                      nginx.ingress.kubernetes.io/auth-signin: "https://auth.{{ domain | default('noah-infra.com') }}/outpost.goauthentik.io/start?rd=$escaped_request_uri"
                      nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid"
                      cert-manager.io/cluster-issuer: "noah-ca-issuer"
                      nginx.ingress.kubernetes.io/server-snippet: |
                        add_header X-Frame-Options DENY;
                        add_header X-Content-Type-Options nosniff;
                        add_header X-XSS-Protection "1; mode=block";
                    hosts:
                      - hubble.{{ domain | default('noah-infra.com') }}
                    tls:
                      - secretName: hubble-tls
                        hosts:
                          - hubble.{{ domain | default('noah-infra.com') }}
              
              # Authentication configuration
              authentication:
                mode: required
                oidc:
                  enabled: true
                  configMapName: cilium-sso-config
              
              # Prometheus monitoring integration
              prometheus:
                enabled: true
                serviceMonitor:
                  enabled: true
                  
              # Production resource configuration
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 1000m
                  memory: 1Gi

        - name: Wait for Hubble UI with SSO integration
          kubernetes.core.k8s_info:
            api_version: apps/v1
            kind: Deployment
            name: hubble-ui
            namespace: "{{ namespace }}"
            wait: true
            wait_condition:
              type: Progressing
              status: "True"
            wait_timeout: 300
          register: hubble_ui_deployment

        - name: Verify SSO-integrated Cilium functionality
          shell: |
            echo "=== VERIFYING SSO-INTEGRATED CILIUM ==="
            
            # Check Cilium status with SSO
            kubectl -n {{ namespace }} exec ds/cilium -- cilium status
            
            # Check Hubble UI accessibility
            kubectl get ingress -n {{ namespace }} hubble-ui -o jsonpath='{.spec.rules[0].host}' || echo "Hubble UI ingress not ready yet"
            
            # Verify network policies are applied
            kubectl get networkpolicies -n identity --no-headers | wc -l
            
            echo "âœ“ SSO-integrated Cilium is operational"
          register: sso_cilium_status
          retries: 3
          delay: 15
          until: sso_cilium_status.rc == 0

      when: deployment_phase in ['sso-integration', 'full']
      tags: [sso, integration]

    - name: Display deployment status
      debug:
        msg:
          - "Cilium deployed in {{ deployment_phase }} mode to namespace: {{ namespace }}"
          - "{% if deployment_phase in ['preparation', 'full'] %}Network preparation: Complete{% endif %}"
          - "{% if deployment_phase in ['sso-integration', 'full'] %}SSO integration: Complete{% endif %}"
          - "{% if deployment_phase in ['sso-integration', 'full'] %}Hubble UI: https://hubble.{{ domain | default('noah-infra.com') }}{% endif %}"
          - "{% if deployment_phase in ['sso-integration', 'full'] %}Network policies: Applied for SSO services{% endif %}"
