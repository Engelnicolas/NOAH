apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authentik.fullname" . }}-server
  labels:
    {{- include "authentik.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "authentik.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        {{- include "authentik.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      containers:
      - name: server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - server
        env:
        - name: AUTHENTIK_REDIS__HOST
          value: "{{ include "authentik.redis.host" . }}"
        - name: AUTHENTIK_REDIS__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "authentik.fullname" . }}-secret
              key: redis-password
        - name: AUTHENTIK_POSTGRESQL__HOST
          value: "{{ include "authentik.postgresql.host" . }}"
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: "{{ .Values.postgresql.auth.database }}"
        - name: AUTHENTIK_POSTGRESQL__USER
          value: "{{ .Values.postgresql.auth.username }}"
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "authentik.fullname" . }}-secret
              key: postgresql-password
        - name: AUTHENTIK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "authentik.fullname" . }}-secret
              key: secret-key
        - name: AUTHENTIK_ERROR_REPORTING__ENABLED
          value: "{{ .Values.authentik.errorReporting.enabled }}"
        - name: AUTHENTIK_LOG_LEVEL
          value: "{{ .Values.authentik.logLevel }}"
        - name: AUTHENTIK_EMAIL__HOST
          value: "{{ .Values.authentik.email.host }}"
        - name: AUTHENTIK_EMAIL__PORT
          value: "{{ .Values.authentik.email.port }}"
        - name: AUTHENTIK_EMAIL__USE_TLS
          value: "{{ .Values.authentik.email.useTls }}"
        - name: AUTHENTIK_EMAIL__FROM
          value: "{{ .Values.authentik.email.from }}"
        {{- if .Values.authentik.email.username }}
        - name: AUTHENTIK_EMAIL__USERNAME
          value: "{{ .Values.authentik.email.username }}"
        - name: AUTHENTIK_EMAIL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "authentik.fullname" . }}-secret
              key: email-password
        {{- end }}
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        - name: https
          containerPort: 9443
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /-/health/live/
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/health/ready/
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
