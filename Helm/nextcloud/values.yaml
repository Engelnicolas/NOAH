# Nextcloud Configuration for NOAH Infrastructure
# Includes SSO integration with Authentik and Traefik ingress

# Secrets configuration (will be overridden by SOPS-encrypted values)
secrets:
  nextcloud:
    adminPassword: "changeme"  # Will be overridden by SOPS
  redis:
    password: "changeme"       # Will be overridden by SOPS
  postgresql:
    password: "changeme"       # Will be overridden by SOPS
    postgresPassword: "changeme"  # Will be overridden by SOPS
  oidc:
    clientSecret: "changeme"   # Will be overridden by SOPS

# Nextcloud application configuration
nextcloud:
  host: cloud.noah-infra.com
  
  # Admin user configuration (managed by SOPS)
  username: nextcloud-admin
  # Password will be injected from encrypted secrets
  
  # Nextcloud configuration
  configs:
    # Trusted domains configuration
    custom.config.php: |-
      <?php
      $CONFIG = array (
        'trusted_domains' => array (
          0 => 'cloud.noah-infra.com',
          1 => '65.21.238.126:31148',
          2 => '65.21.238.126:31883',
          3 => 'localhost',
          4 => '127.0.0.1',
        ),
        'overwritehost' => 'cloud.noah-infra.com',
        'overwriteprotocol' => 'https',
        'overwritewebroot' => '',
        'overwrite.cli.url' => 'https://cloud.noah-infra.com',
      );
    
    # Enable OIDC SSO with Authentik
    oidc.config.php: |-
      <?php
      $CONFIG = array (
        'oidc_login_provider_url' => 'https://auth.noah-infra.com/application/o/nextcloud/',
        'oidc_login_client_id' => 'nextcloud-oidc',
        'oidc_login_client_secret' => getenv('OIDC_CLIENT_SECRET'),
        'oidc_login_auto_redirect' => false,
        'oidc_login_end_session_redirect' => false,
        'oidc_login_button_text' => 'Log in with NOAH SSO',
        'oidc_login_hide_password_form' => false,
        'oidc_login_use_id_token' => true,
        'oidc_login_attributes' => array (
          'id' => 'preferred_username',
          'name' => 'name',
          'mail' => 'email',
          'groups' => 'groups',
        ),
        'oidc_login_default_group' => 'users',
        'oidc_login_use_external_storage' => false,
        'oidc_login_scope' => 'openid profile email groups',
        'oidc_login_proxy_ldap' => false,
        'oidc_login_disable_registration' => true,
        'oidc_login_redir_fallback' => false,
        'oidc_login_alt_login_page' => 'assets/login.php',
        'oidc_login_tls_verify' => true,
      );
    
    # Additional security and performance configurations
    security.config.php: |-
      <?php
      $CONFIG = array (
        'trusted_domains' => array (
          0 => 'cloud.noah-infra.com',
          1 => 'localhost',
        ),
        'trusted_proxies' => array (
          0 => '10.0.0.0/8',
          1 => '172.16.0.0/12',
          2 => '192.168.0.0/16',
        ),
        'forwarded_for_headers' => array (
          0 => 'HTTP_X_FORWARDED_FOR',
          1 => 'HTTP_X_FORWARDED',
          2 => 'HTTP_FORWARDED_FOR',
          3 => 'HTTP_FORWARDED',
        ),
        'overwrite.cli.url' => 'https://cloud.noah-infra.com',
        'overwriteprotocol' => 'https',
        'overwritehost' => 'cloud.noah-infra.com',
        'htaccess.RewriteBase' => '/',
        'memcache.local' => '\\OC\\Memcache\\APCu',
        'memcache.distributed' => '\\OC\\Memcache\\Redis',
        'memcache.locking' => '\\OC\\Memcache\\Redis',
        'redis' => array (
          'host' => 'nextcloud-redis-master',
          'port' => 6379,
          'password' => getenv('REDIS_PASSWORD'),
        ),
        'mail_smtpmode' => 'smtp',
        'mail_smtpsecure' => 'tls',
        'mail_sendmailmode' => 'smtp',
        'mail_from_address' => 'nextcloud',
        'mail_domain' => 'noah-infra.com',
        'default_phone_region' => 'US',
        'maintenance_window_start' => 1,
      );

  # Environment variables for OIDC integration
  extraEnv:
    - name: OIDC_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: nextcloud-oidc-secret
          key: client-secret
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: nextcloud-redis-secret
          key: redis-password

  # Persistence configuration
  persistence:
    enabled: true
    size: 50Gi
    storageClass: ""
    accessMode: ReadWriteOnce
    nextcloudData:
      enabled: true
      size: 100Gi
      storageClass: ""
      accessMode: ReadWriteOnce

  # Resources
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

  # Cronjob for maintenance
  cronjob:
    enabled: true
    schedule: "*/15 * * * *"
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi

  # Enable additional apps
  extraApps:
    - user_oidc  # OIDC login support

# Ingress configuration via Traefik
ingress:
  enabled: true
  className: traefik
  annotations:
    # Traefik-specific annotations
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: "letsencrypt"
    # Security and headers middleware
    traefik.ingress.kubernetes.io/router.middlewares: "nextcloud-headers@kubernetescrd,nextcloud-security@kubernetescrd"
    # SSL redirect
    traefik.ingress.kubernetes.io/redirect-to-https: "true"
  hosts:
    - host: cloud.noah-infra.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: nextcloud-tls
      hosts:
        - cloud.noah-infra.com

# PostgreSQL database configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: ""  # Will be set from SOPS secret
    username: nextcloud
    password: ""  # Will be set from SOPS secret
    database: nextcloud
  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: ""
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# Redis cache configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: ""  # Will be set from SOPS secret
  master:
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 256Mi

# Service configuration
service:
  type: ClusterIP
  port: 8080
  annotations: {}

# Security context
securityContext:
  runAsUser: 33
  runAsGroup: 33
  fsGroup: 33

# Pod security context
podSecurityContext:
  runAsUser: 33
  runAsGroup: 33
  fsGroup: 33

# Node selector and tolerations
nodeSelector: {}
tolerations: []
affinity: {}

# Monitoring configuration (disabled by default)
metrics:
  enabled: false
  serviceMonitor:
    enabled: false

# Backup configuration
backup:
  enabled: false
