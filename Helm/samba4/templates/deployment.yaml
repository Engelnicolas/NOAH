apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "samba4.fullname" . }}
  labels:
    {{- include "samba4.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "samba4.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "samba4.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: init-samba
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Initializing Samba4 data directory..."
          mkdir -p /var/lib/samba/data
          mkdir -p /var/lib/samba/config
          mkdir -p /var/log/samba
          # Create a basic smb.conf if it doesn't exist
          if [ ! -f /var/lib/samba/config/smb.conf ]; then
            cp /etc/samba-config/smb.conf /var/lib/samba/config/smb.conf
          fi
          chown -R 1000:1000 /var/lib/samba
          echo "Initialization complete"
        volumeMounts:
        - name: samba-data
          mountPath: /var/lib/samba
        - name: samba-config
          mountPath: /etc/samba-config
        securityContext:
          runAsUser: 0
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: USERID
          value: "1000"
        - name: GROUPID  
          value: "1000"
        - name: WORKGROUP
          value: {{ .Values.domain.name | quote }}
        - name: TZ
          value: "UTC"
        - name: SAMBA_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: samba4-secrets
              key: SAMBA_ADMIN_PASSWORD
        # Configure user and shares for dperson/samba
        - name: USER
          value: "admin;$(SAMBA_ADMIN_PASSWORD)"
        ports:
        - name: smb
          containerPort: 445
          protocol: TCP
        - name: netbios
          containerPort: 139
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 445
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 445
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: samba-data
          mountPath: /data
        - name: samba-data
          mountPath: /var/lib/samba
          subPath: lib
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      volumes:
      - name: samba-data
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: samba-config
        configMap:
          name: samba4-config
